name: Release Kusk Gateway Dashboard

concurrency:
  group: "release"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

on:
  push:
    tags: 
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-*"

jobs:
  release:
    name: Create and upload release-artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "arm64"
            path: arm64v8/nginx:1.22.0-alpine
          - name: "amd64"
            path: nginx:1.22.0-alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Docker Metadata for Kusk Gateway Dashboard
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: kubeshop/kusk-gateway-dashboard
          tags: |
            type=sha
          flavor: |
            latest=true
      
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ github.repository }}:${{ github.ref_name }}-${{ matrix.name }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SEGMENT_API_KEY=${{ secrets.REACT_APP_SEGMENT_API_KEY }}
            TARGET=${{ matrix.path }}
  create_manifest:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create Docker manifest and push multi-arch image to Registry
        run: |
          docker manifest create ${{ github.repository }}:${{ github.ref_name }} --amend ${{ github.repository }}:${{ github.ref_name }}-arm64 --amend ${{ github.repository }}:${{ github.ref_name }}-amd64
          docker manifest push -p ${{ github.repository }}:${{ github.ref_name }}
          
          docker manifest create ${{ github.repository }}:latest --amend ${{ github.repository }}:${{ github.ref_name }}-arm64 --amend ${{ github.repository }}:${{ github.ref_name }}-amd64
          docker manifest push -p ${{ github.repository }}:latest
  helm_chart_version_bump:
    name: "Trigger Helm chart appVersion update"
    needs: "create_manifest"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: "kubeshop/helm-charts"
          ref: "main"
          fetch-depth: 0
          token: ${{ secrets.CI_BOT_TOKEN }}

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Bump Kusk Gateway dashboard chart
        run: |
          # sets appVersion in the Chart.yaml
          echo New appVersion: ${{ github.ref_name }}
          sed  -i -e "s/^appVersion: .*$/appVersion: \"${{ github.ref_name }}\"/" charts/kusk-gateway-dashboard/Chart.yaml
          # Bumps charts patch version
          CURRENT_VERSION=$(sed  -n  -e  "s/^version: \(.*\)$/\1/p"  charts/kusk-gateway-dashboard/Chart.yaml)
          echo Current chart version ${CURRENT_VERSION}
          NEW_VERSION=$(echo $CURRENT_VERSION |awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo New version ${NEW_VERSION}
          sed -i -e "s/^version: .*/version: ${NEW_VERSION}/g" charts/kusk-gateway-dashboard/Chart.yaml
      - name: Lint the chart
        run: |
          helm lint charts/kusk-gateway-dashboard
      - name: Push updated chart
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git remote -v
          git add .
          git commit -m "automatically updated kusk-gateway related charts"
          git push
      - name: Slack Notification if the helm version bump succeeded
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: kusk
          SLACK_COLOR: good
          SLACK_ICON: https://github.githubassets.com/images/modules/site/features/actions-icon-actions.svg
          SLACK_TITLE: Helm chart version bump succeeded :party_blob:!
          SLACK_MESSAGE: "Kusk Gateway Dashboard chart version was bumped"
          SLACK_USERNAME: GitHub
          SLACK_LINK_NAMES: true
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_FOOTER: "Kubeshop --> Kusk Gateway Dashboard"

  notify_slack_if_helm_chart_bump_fails:
    runs-on: ubuntu-latest
    needs: helm_chart_version_bump
    if: always() && (needs.helm_chart_version_bump.result == 'failure')
    steps:
    - name: Slack Notification if Helm Release action failed
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: kusk
        SLACK_COLOR: ${{ needs.helm_chart_version_bump.result }} # or a specific color like 'good' or '#ff00ff'
        SLACK_ICON: https://github.githubassets.com/images/modules/site/features/actions-icon-actions.svg
        SLACK_TITLE: Helm Chart version bump action failed :boom:!
        SLACK_USERNAME: GitHub
        SLACK_LINK_NAMES: true
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_FOOTER: "Kubeshop --> Kusk Gateway Dashboard"
